name: Weekly Fuzz

on:
  schedule:
    # Run every week at 12am PST (8am UTC) Saturday
    - cron: '0 8 * * SAT'

jobs:
  linux:
    name: Weekly Fuzz (Linux)
    runs-on: ubuntu-20.04
    steps:
      - name: Create cache file
        run: |
          mkdir check-SHA
          echo ${{ github.sha }} > github-sha.txt

      - name: Check SHA
        id: check_sha
        uses: actions/cache@v1
        with:
          path: check-SHA
          key: check-SHA-${{ github.sha }}

      - name: Install system dependencies
        if: steps.check_sha.outputs.cache-hit != 'true'
        run: sudo apt-get install -y libusb-1.0-0-dev graphviz

      - name: Checkout sources
        if: steps.check_sha.outputs.cache-hit != 'true'
        uses: actions/checkout@v2

      - name: Find needed nightly toolchain version
        if: steps.check_sha.outputs.cache-hit != 'true'
        id: rust_nightly_version
        run: |
          OUT=$(cat modality-probe-capi/rust-toolchain)
          echo "$OUT"
          echo "##[set-output name=toolchain;]$OUT"

      - name: Install nightly toolchain
        if: steps.check_sha.outputs.cache-hit != 'true'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ steps.rust_nightly_version.outputs.toolchain }}
          override: true
          components: rustfmt, clippy

      - name: Install stable toolchain
        if: steps.check_sha.outputs.cache-hit != 'true'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Print tool versions
        if: steps.check_sha.outputs.cache-hit != 'true'
        run: |
          echo `rustup default`
          echo `which rustc`
          echo `which cargo`
          echo `which cargo-clippy`
          echo `which cargo-fmt`
          echo `rustc --version`
          echo `cargo --version`
          echo `cargo-clippy --version`
          echo `cargo-fmt --version`

      - name: Fetch dependencies
        if: steps.check_sha.outputs.cache-hit != 'true'
        uses: actions-rs/cargo@v1
        with:
          command: fetch

      - name: Install cargo-fuzz
        if: steps.check_sha.outputs.cache-hit != 'true'
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-fuzz

      - name: Run tests with extended proptest configs
        if: steps.check_sha.outputs.cache-hit != 'true'
        env:
            PROPTEST_CASES: 100000
        run: ./test.sh

      - name: Run fuzz tests (30 minutes per fuzz target)
        if: steps.check_sha.outputs.cache-hit != 'true'
        run: |
          for target in `cargo fuzz list`; do
              RUSTUP_TOOLCHAIN=nightly cargo fuzz run $target -- -max_total_time=30m -timeout=35m
          done
