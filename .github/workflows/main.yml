name: Build and Test

on: [pull_request]

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-20.04
    steps:
      - name: Install system packages
        run: sudo apt-get install -y libusb-1.0-0-dev graphviz clang llvm

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Find needed nightly toolchain version
        id: rust_nightly_version
        run: |
          OUT=$(cat modality-probe-capi/rust-toolchain)
          echo "$OUT"
          echo "##[set-output name=toolchain;]$OUT"

      - name: Install needed nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt, clippy
          toolchain: ${{ steps.rust_nightly_version.outputs.toolchain }}
          override: true

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Fetch dependencies
        uses: actions-rs/cargo@v1
        with:
          command: fetch

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Install cargo-fuzz
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-fuzz

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all -- -D warnings

      - name: Run cargo fmt (capi)
        run: |
          cd modality-probe-capi
          cargo fmt -- --check

      - name: Run cargo clippy (capi)
        run: |
          cd modality-probe-capi
          cargo clippy --all

      - name: Test
        run: ./test.sh

      - name: Run cargo fmt (Rust example)
        run: |
          cd examples/rust-example
          cargo fmt -- --check

      - name: Run cargo clippy (Rust example)
        run: |
          cd examples/rust-example
          cargo clippy --all

      - name: Test (armv7 target)
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: --all --features "std, debug-collector-access" --target=armv7-unknown-linux-gnueabihf

      - name: Test (big endian target)
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: --all --features "std, debug-collector-access" --target=mips64-unknown-linux-gnuabi64

  windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Fetch dependencies
        uses: actions-rs/cargo@v1
        with:
          command: fetch

      # Windows MSVC doesn't like the no-std modality-probe-capi cdylib build
      - name: Test
        shell: bash
        run: ./test.sh windows
